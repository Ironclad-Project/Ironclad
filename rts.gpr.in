--  rts.gpr.in: Project's RTS building script.
--  Copyright (C) 2025 streaksu
--
--  This program is free software: you can redistribute it and/or modify
--  it under the terms of the GNU General Public License as published by
--  the Free Software Foundation, either version 3 of the License, or
--  (at your option) any later version.
--
--  This program is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU General Public License for more details.
--
--  You should have received a copy of the GNU General Public License
--  along with this program.  If not, see <http://www.gnu.org/licenses/>.

library project RTS is
   type Arch_Name is (
      "riscv64-limine",
      "x86_64-limine"
   );

   Arch : Arch_Name := "@host_cpu@-@PLATFORM@";
   Ada_Flags        := "@ADAFLAGS@";

   for Source_Dirs use ("rtsdir/adainclude");
   for Object_Dir use "rtsdir/obj";
   for Library_Dir use "rtsdir/adalib";
   for Library_Kind use "static";
   for Library_Name use "gnat";
   for Runtime ("Ada") use "rtsdir";
   for Languages use ("Ada");
   for Create_Missing_Dirs use "True";

   package Builder is
      for Global_Configuration_Pragmas use "@SRCDIR@/source/pragmas.adc";
      for Switches ("Ada") use ("-nostdlib");
   end Builder;

   package Compiler is
      Base_Ada_Switches := Split (Ada_Flags, " ") & (
         "-Wall",
         "-Wextra",
         "@WERROR_FLAG@",
         "-gnaty",
         "-gnatg",
         "-nostdinc",
         "-fno-stack-protector",
         "-fno-stack-check",
         "-fno-PIC",
         "-ffunction-sections",
         "-fdata-sections",
         "-ffile-prefix-map=" & "@SRCDIR@" & "=."
      );

      case Arch is
         when "riscv64-limine" =>
            Base_Ada_Switches := Base_Ada_Switches & (
               "-march=rv64imac_zicsr_zifencei",
               "-mabi=lp64",
               "-mno-relax"
            );
         when "x86_64-limine" =>
            Base_Ada_Switches := Base_Ada_Switches & (
               "-m64",
               "-march=x86-64",
               "-mabi=sysv",
               "-mgeneral-regs-only",
               "-mno-red-zone",
               "-mcmodel=kernel"
            );
      end case;

      for Switches ("Ada") use Base_Ada_Switches;
   end Compiler;
end RTS;
