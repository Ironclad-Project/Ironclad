--  ironclad.gpr.in: Project's building script.
--  Copyright (C) 2025 streaksu
--
--  This program is free software: you can redistribute it and/or modify
--  it under the terms of the GNU General Public License as published by
--  the Free Software Foundation, either version 3 of the License, or
--  (at your option) any later version.
--
--  This program is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU General Public License for more details.
--
--  You should have received a copy of the GNU General Public License
--  along with this program.  If not, see <http://www.gnu.org/licenses/>.

project Ironclad is
   type Arch_Name is
      ("riscv64-limine",
       "x86_64-limine");

   Arch : Arch_Name := "@host_cpu@-@PLATFORM@";
   Ada_Flags        := "@ADAFLAGS@";
   C_Flags          := "@CFLAGS@";
   Asm_Flags        := "@ASFLAGS@";
   Linker_Flags     := "@LDFLAGS@";

   Common_Source_Dirs :=
      ("@SRCDIR@/source/arch/" & Arch,
       "@SRCDIR@/source/arch",
       "@SRCDIR@/source/cryptography",
       "@SRCDIR@/source/devices",
       "@SRCDIR@/source/ipc",
       "@SRCDIR@/source/memory",
       "@SRCDIR@/source/networking",
       "@SRCDIR@/source/userland",
       "@SRCDIR@/source/vfs",
       "@SRCDIR@/source/virtualization",
       "@SRCDIR@/source",
       "@SRCDIR@/freestnd-c-hdrs",
       "@SRCDIR@/cc-runtime/src");

   case Arch is
      when "riscv64-limine" =>
         Common_Source_Dirs := Common_Source_Dirs &
            ("@SRCDIR@/flanterm/src",
             "@SRCDIR@/flanterm/src/flanterm_backends");
      when "x86_64-limine" =>
         Common_Source_Dirs := Common_Source_Dirs &
            ("@SRCDIR@/uacpi/source",
             "@SRCDIR@/flanterm/src",
             "@SRCDIR@/flanterm/src/flanterm_backends");
   end case;

   for Source_Dirs use Common_Source_Dirs;
   for Object_Dir use "obj";
   for Exec_Dir use ".";
   for Main use ("main.adb");
   for Languages use ("Ada", "C", "Asm_Cpp");
   for Create_Missing_Dirs use "True";

   Common_Compiler_Flags :=
      ("-Wall",
       "-Wextra",
       "@WERROR_FLAG@",
       "-nostdinc",
       "-fno-PIC",
       "-fno-stack-protector",
       "-fno-stack-check",
       "-fdata-sections",
       "-ffunction-sections",
       "-ffile-prefix-map=" & "@SRCDIR@" & "=.");

   case Arch is
      when "riscv64-limine" =>
         Common_Compiler_Flags := Common_Compiler_Flags &
            ("-march=rv64imac_zicsr_zifencei",
             "-mabi=lp64",
             "-mno-relax");
      when "x86_64-limine" =>
         Common_Compiler_Flags := Common_Compiler_Flags &
            ("-fcf-protection",
             "-mgeneral-regs-only",
             "-mno-red-zone",
             "-mcmodel=kernel");
   end case;

   package Builder is
      for Executable ("main.adb") use "ironclad";
      for Switches ("Ada") use ("-nostdlib");
   end Builder;

   package Compiler is
      Base_Ada_Switches := Split (Ada_Flags, " ") & Common_Compiler_Flags &
         ("-gnaty",
          "-gnateDIroncladName=""" & "@PACKAGE_NAME@"      & """",
          "-gnateDVersion="""      & "@PACKAGE_VERSION@"   & """",
          "-gnateDBugSite="""      & "@PACKAGE_BUGREPORT@" & """",
          "-gnateDArchitecture=""" & "@host_cpu@"          & """",
          "-gnateDPlatform="""     & "@PLATFORM@"          & """",
          "-gnateDArchName="""     & Arch                  & """");
      Base_C_Switches := Split (C_Flags, " ") & Common_Compiler_Flags &
         ("-I@SRCDIR@/uacpi/include");
      Base_Asm_Switches := Split (Asm_Flags, " ") & Common_Compiler_Flags;

      for Default_Switches ("Ada") use Base_Ada_Switches;
      for Default_Switches ("C") use Base_C_Switches;
      for Default_Switches ("Asm_Cpp") use Base_Asm_Switches;
      for Local_Configuration_Pragmas use "@SRCDIR@/source/pragmas.adc";
   end Compiler;

   package Linker is
      Base_Link_Switches := Split (Linker_Flags, " ") &
         ("-T@SRCDIR@/source/arch/" & Arch & "/linker.ld",
          "-static", "-Wl,-gc-sections");

      case Arch is
         when "riscv64-limine" =>
            for Switches ("Ada") use Base_Link_Switches &
               ("-zmax-page-size=0x1000", "-Wl,-melf64lriscv",
                "-Wl,--no-relax");
         when "x86_64-limine" =>
            for Switches ("Ada") use Base_Link_Switches &
               ("-zmax-page-size=0x1000", "-Wl,-melf_x86_64");
      end case;

      for Switches ("Ada") use Base_Link_Switches &
         ("rtsdir/adalib/libgnat.a");
   end Linker;
end Ironclad;
